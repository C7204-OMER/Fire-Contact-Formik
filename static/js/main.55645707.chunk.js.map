{"version":3,"sources":["utils/firebase.js","utils/customToasitfy.js","components/contacts/Contacts.js","utils/functions.js","utils/contants.js","components/form/Form.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","succesToastify","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Contacts","updateFormHandler","useState","contactList","setContactList","isLoading","setIsLoading","useEffect","database","ref","on","snapshot","contacts","val","contactArray","id","push","useFetch","className","Table","size","Header","Row","HeaderCell","textAlign","Body","Cell","colSpan","length","map","item","index","username","toUpperCase","phoneNumber","gender","Icon","name","onClick","child","remove","options","key","text","value","FormComponent","info","setInfo","handleFormSubmit","handleInputChange","e","target","Grid","verticalAlign","Column","style","width","href","rel","Form","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","required","type","Dropdown","result","selection","toLowerCase","Button","color","initialValues","App","preventDefault","update","updateHandler","addInfo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55645707.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/database\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD_GImd6n8rgeoyjO6iPF08V-uKDZjY6w8\",\r\n  authDomain: \"firecontact-3ac93.firebaseapp.com\",\r\n  projectId: \"firecontact-3ac93\",\r\n  storageBucket: \"firecontact-3ac93.appspot.com\",\r\n  messagingSenderId: \"201858348335\",\r\n  appId: \"1:201858348335:web:5d6eea097cea975cbdddda\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const succesToastify = (msg) => {\r\n  toast.success(msg, {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Table, Icon } from \"semantic-ui-react\";\r\nimport { useFetch, deleteHandler } from \"../../utils/functions\";\r\n\r\nconst Contacts = ({ updateFormHandler }) => {\r\n  const { contactList, isLoading } = useFetch();\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"contact-header\">Contacts</h2>\r\n      <Table size=\"large\" className=\"table\">\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell textAlign=\"center\">Username</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Phone Number</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Gender</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Delete</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Edit</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {isLoading ? (\r\n            <Table.Row>\r\n              <Table.Cell colSpan={5} textAlign=\"center\">\r\n                <p>Loading..</p>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ) : contactList?.length === 0 ? (\r\n            <Table.Row>\r\n              <Table.Cell colSpan={5} textAlign=\"center\">\r\n                <p className=\"nothing-found\">Nothing Found!</p>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ) : (\r\n            contactList?.map((item, index) => (\r\n              <Table.Row key={index}>\r\n                <Table.Cell textAlign=\"center\">\r\n                  {item.username.toUpperCase()}\r\n                </Table.Cell>\r\n                <Table.Cell textAlign=\"center\">{item.phoneNumber}</Table.Cell>\r\n                <Table.Cell textAlign=\"center\">{item.gender}</Table.Cell>\r\n                <Table.Cell textAlign=\"center\">\r\n                  <Icon name=\"delete\" onClick={() => deleteHandler(item.id)} />\r\n                </Table.Cell>\r\n                <Table.Cell\r\n                  textAlign=\"center\"\r\n                  onClick={() =>\r\n                    updateFormHandler(\r\n                      item.id,\r\n                      item.username,\r\n                      item.phoneNumber,\r\n                      item.gender\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon name=\"edit\" />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))\r\n          )}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import firebase from \"./firebase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { succesToastify } from \"./customToasitfy\";\r\n\r\nexport const addInfo = (info) => {\r\n  const contactRef = firebase.database().ref(\"contact\");\r\n  contactRef.push(info);\r\n  succesToastify(\"Added Succesfully!\");\r\n};\r\n\r\nexport const useFetch = () => {\r\n  const [contactList, setContactList] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const contactRef = firebase.database().ref(\"contact\");\r\n    contactRef.on(\"value\", (snapshot) => {\r\n      const contacts = snapshot.val();\r\n      const contactArray = [];\r\n      for (let id in contacts) {\r\n        contactArray.push({ id, ...contacts[id] });\r\n      }\r\n      setContactList(contactArray);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  return { contactList, isLoading };\r\n};\r\n\r\nexport const deleteHandler = (id) => {\r\n  const contactRef = firebase.database().ref(\"contact\").child(id);\r\n  contactRef.remove();\r\n  succesToastify(\"Deleted Succesfully!\");\r\n};\r\n\r\nexport const updateHandler = (info) => {\r\n  const contactRef = firebase.database().ref(\"contact\").child(info.id);\r\n  contactRef.update(info);\r\n  succesToastify(\"Updated Succesfully!\");\r\n};\r\n","export const options = [\r\n  { key: \"m\", text: \"Male\", value: \"male\" },\r\n  { key: \"f\", text: \"Female\", value: \"female\" },\r\n  { key: \"o\", text: \"Other\", value: \"other\" },\r\n];\r\n","import React from \"react\";\r\nimport { Button, Form, Grid, Segment } from \"semantic-ui-react\";\r\nimport { options } from \"../../utils/contants\";\r\n\r\nconst FormComponent = ({ info, setInfo, handleFormSubmit }) => {\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInfo({ ...info, [name]: value });\r\n  };\r\n\r\n  const handleOptionChange = (e, result) => {\r\n    const { name, value } = result;\r\n    setInfo({ ...info, [name]: value.toUpperCase() });\r\n  };\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n      <Grid.Column style={{ width: \"300px\" }}>\r\n        <div className=\"ui piled segments\">\r\n          <div className=\"ui segment brand\">\r\n            <a\r\n              href=\"https://github.com/edwardBenedict\"\r\n              className=\"design\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <code>{\"<JkR-Dsgn>\"}</code>\r\n              <span className=\"design header\">design</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <h2 className=\"contact-header\">Add Contact</h2>\r\n        <Form size=\"large\" onSubmit={handleFormSubmit}>\r\n          <Segment stacked>\r\n            <Form.Input\r\n              fluid\r\n              name=\"username\"\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Name\"\r\n              value={info.username}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              name=\"phoneNumber\"\r\n              icon=\"phone\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Phone Number\"\r\n              type=\"text\"\r\n              value={info.phoneNumber}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n            <Form.Dropdown\r\n              options={options}\r\n              onChange={handleOptionChange}\r\n              placeholder=\"Gender\"\r\n              name=\"gender\"\r\n              fluid\r\n              selection\r\n              value={info.gender.toLowerCase()}\r\n              required\r\n            />\r\n            <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n              {info.id ? \"Update\" : \"Add\"}\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","import { useState } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Form from \"./components/form/Form\";\nimport { addInfo, updateHandler } from \"./utils/functions\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst initialValues = { username: \"\", phoneNumber: \"\", gender: \"NO INFO!\" };\n\nfunction App() {\n  const [info, setInfo] = useState(initialValues);\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (info.id) {\n      updateHandler(info);\n    } else {\n      addInfo(info);\n    }\n    setInfo(initialValues);\n  };\n\n  const updateFormHandler = (id, username, phoneNumber, gender) => {\n    setInfo({ id, username, phoneNumber, gender });\n  };\n\n  return (\n    <div className=\"App\">\n      <Form\n        className=\"form\"\n        info={info}\n        setInfo={setInfo}\n        handleFormSubmit={handleFormSubmit}\n      />\n      <Contacts className=\"contacts\" updateFormHandler={updateFormHandler} />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}